setenv boot_media mmc;
setenv dev_number 0;
setenv kernel_imagetype zImage;
setenv phram_addr @@QUINCE_PHRAM_ADDR@@;
setenv phram_size @@QUINCE_PHRAM_SIZE@@;
setenv rootfs_img_file @@QUINCE_ROOTFS_IMG_FILE@@;
setenv opt_img_file @@QUINCE_OPT_IMG_FILE@@;

# Environment variables set by U-Boot
# setenv baudrate 115200;
# setenv fdtaddr 0x88000000
# setenv loadaddr 0x82000000

# (findfdt)
# if test $board_name = A335BONE; then
#     setenv fdtfile am335x-bone.dtb;
# fi;
# if test $board_name = A335BNLT; then
#     setenv fdtfile am335x-boneblack.dtb;
# fi;
# if test $board_name = A335PBGL; then
#     setenv fdtfile am335x-pocketbeagle.dtb;
# fi;
# if test $board_name = BBBW; then
#     setenv fdtfile am335x-boneblack-wireless.dtb;
# fi;
# if test $board_name = BBG1; then
#     setenv fdtfile am335x-bonegreen.dtb;
# fi;
# if test $board_name = BBGW; then
#     setenv fdtfile am335x-bonegreen-wireless.dtb;
# fi;
# if test $board_name = BBBL; then
#     setenv fdtfile am335x-boneblue.dtb;
# fi;
# if test $board_name = BBEN; then
#     setenv fdtfile am335x-sancloud-bbe.dtb;
# fi;
# if test $board_name = BBELITE; then
#     setenv fdtfile am335x-sancloud-bbe-lite.dtb;
# fi;
# if test $board_name = BBE_EX_WIFI; then
#     setenv fdtfile am335x-sancloud-bbe-extended-wifi.dtb;
# fi;
# if test $board_name = A33515BB; then
#     setenv fdtfile am335x-evm.dtb;
# fi;
# if test $board_name = A335X_SK; then
#     setenv fdtfile am335x-evmsk.dtb;
# fi;
# if test $board_name = A335_ICE; then
#     setenv fdtfile am335x-icev2.dtb;
#     if test $ice_mii = mii; then
#         setenv pxe_label_override Pruss;
#     fi;
# fi;
# if test $fdtfile = undefined; then
#     echo WARNING:
#     Could not determine device tree to use;
# fi;

# (init_console)
# if test $board_name = A335_ICE; then
#     setenv console ttyO3,115200n8;
# else
#     setenv console ttyO0,115200n8;
# fi;

# Identify boot drive (if exist microSD then boot form it, else form eMMC)
if test ${boot_media} = mmc; then
    if fatinfo ${boot_media} 0; then
        echo Boot from microSD
        setenv dev_number 0;
    else
        echo Boot from eMMC
        setenv dev_number 1;
    fi;
    mmc dev ${dev_number};
    part uuid mmc ${dev_number}:2 uuid;
fi;

# Load Device Tree Blob
echo Loading ${fdtfile}...
load ${boot_media} ${dev_number}:1 ${fdtaddr} ${fdtfile};

# Load Linux Kernel
echo Loading ${kernel_imagetype}...
load ${boot_media} ${dev_number}:1 ${loadaddr} ${kernel_imagetype};

setenv bootargs root=PARTUUID=${uuid} rootwait rw earlycon console=${console},${baudrate}

if test -e ${phram_addr} && test -e ${phram_size}; then
    if test -e ${rootfs_img_file} && test -e ${boot_media} ${dev_number}:2 ${rootfs_img_file}; then
        # Check phram size for rootfs
        setenv rest_phram_size ${phram_size};
        size ${boot_media} ${dev_number}:2 ${rootfs_img_file};
        setenv rootfs_img_size 0x${filesize}

        if test ${rest_phram_size} -ge ${rootfs_img_size}; then
            # Load rootfs image file
            setenv rootfs_img_addr ${phram_addr}
            echo Loading ${rootfs_img_file}... (addr=${rootfs_img_addr} size=${rootfs_img_size})
            load ${boot_media} ${dev_number}:2 ${rootfs_img_addr} ${rootfs_img_file};
            setenv bootargs ${bootargs} phram.phram=/,${rootfs_img_addr},${rootfs_img_size} root=/dev/mtdblock0

            if test -e ${opt_img_file} && test -e ${boot_media} ${dev_number}:2 ${opt_img_file}; then
                # Check phram size for opt
                setexpr rest_phram_size ${rest_phram_size} - ${rootfs_img_size}
                setenv rest_phram_size 0x${rest_phram_size};
                size ${boot_media} ${dev_number}:2 ${opt_img_file};
                setenv opt_img_size 0x${filesize}

                if test ${rest_phram_size} -ge ${opt_img_size}; then
                    # Load opt image file
                    setexpr opt_img_addr ${rootfs_img_addr} + ${rootfs_img_size}
                    setenv opt_img_addr 0x${opt_img_addr}
                    echo Loading ${opt_img_file}... (addr=${opt_img_addr} size=${opt_img_size})
                    load ${boot_media} ${dev_number}:2 ${opt_img_addr} ${opt_img_file};
                    setenv bootargs ${bootargs} mtdblock1=/opt,${opt_img_addr},${opt_img_size}
                else
                    echo Not enough phram size for loading ${opt_img_file}.
                fi;
            else
                echo Not found ${opt_img_file}.
            fi;
        else
            echo Not enough phram size for loading ${rootfs_img_file}.
        fi;
    else
        echo Not found ${rootfs_img_file}.
    fi;
fi;

# Startup Linux Kernel
echo Now boot Linux Kernel...
bootz ${loadaddr} - ${fdtaddr};

